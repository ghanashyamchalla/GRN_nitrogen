% This script is based on the Tutorial.m file from SSM model by Piotr
% Mirowski. I have modified the files to accept a parameter file which
% can be modified to integrate with MDS model.
% Author: Stuti Shrivastava


function GrNM1 (params_file, out_file)

addpath(genpath('../src/'));

% Read params file and call the model
params_data = readtable(params_file, 'Delimiter', 'tab', ...
    'ReadVariableNames', false);
for k = 1:(height(params_data))
    if any(strcmp(params_data.Var1, 'nitrate'))
        n_conc = params_data{strcmp(params_data.Var1, 'nitrate'), 2};
        if n_conc < 1
            static_file = 'Input/GrNM_static1.mat';
        elseif n_conc >= 1
            static_file = 'Input/GrNM_static2.mat';
        else
            static_file = 'Input/GrNM_static1.mat';
        end
    end
    if any(strcmp(params_data.Var1, 'n_models'))
        n_models = params_data{strcmp(params_data.Var1, 'n_models'),2};
    else
        n_models = 2;
    end
    if any(strcmp(params_data(:,1), 'script_name'))
        script_name = params_data{strcmp(params_data.Var1, 'script_name'),2};
    else
        script_name = 'Script_Arabidopsis76_Leave1_LARS';
    end
    if any(strcmp(params_data(:,1), 'tau'))
        tau_val = params_data{strcmp(params_data.Var1, 'tau'),2};
    else
        tau_val = 3;
    end
    if any(strcmp(params_data(:,1), 'gamma'))
        gamma_val = params_data{strcmp(params_data.Var1, 'gamma'),2};
    else
        gamma_val = 0.1;
    end
    if any(strcmp(params_data(:,1), 'lambda'))
        lambda_val = params_data{strcmp(params_data.Var1, 'lambda'),2};
    else
        lambda_val = 0.1;
    end
end


% Learn multiple models
GRN_Batch_MultiModel_AR1(n_models, script_name, 'Output', out_file, ...
    'gene_dataset_filename', ...    % Param to specify the input data
    static_file, ...                % Input dataset...
    'n_steps_display', 0, ...
    'verbosity_level', 0, ...
    'save', 'txt', ...              % Options: 'all', 'txt': Save both matlab workspace & text or just text file
    'tau', tau_val, ...             % Kinetic time coefficient
    'gamma', gamma_val, ...         % Weight of the dynamic error
    'lambda_w', lambda_val);        % L-1 regularization coefficient
end
